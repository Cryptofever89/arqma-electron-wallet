name: Arqma Electron Wallet Build
on:
    push:
        branches:
            - master

jobs:
    build:
        runs-on: ${{ matrix.os }}
        strategy:
            fail-fast: false
            matrix:
              os: [windows-2019, macos-latest, ubuntu-latest]

        steps:
            - name: Checkout git repo
              uses: actions/checkout@v1

            - name: Install node
              uses: actions/setup-node@v1
              with:
                node-version: "12.22.6"
            - name: Patch node gyp on windows to support Visual Studio 2019
              if: matrix.os == 'windows-2019'
              shell: powershell
              run: |
                npm install --global node-gyp@latest
                npm prefix -g | % {npm config set node_gyp "$_\node_modules\node-gyp\bin\node-gyp.js"}
            - name: Install vs
              run: npm config set msvs_version 2019
                
            - name: Install dependencies
              run: npm install -f
              
            - name: Download Arqmad binaries
              run: node ./build/download-binaries.js

            - name: Extract gz binaries
              if: runner.os == 'Linux'
              run: tar -xf latest.gz
              shell: bash
              working-directory: ./downloads

            - name: Extract zip binaries
              if: runner.os != 'Linux'
              run: unzip latest.zip
              shell: bash
              working-directory: ./downloads

            - name: Move arqmad binaries
              run: |
                find ./downloads -type f -name "arqmad*" -exec cp '{}' ./bin \;
                find ./downloads -type f -name "arqma-wallet-rpc*" -exec cp '{}' ./bin \;
              shell: bash

            - name: Verify binaries
              run: ls ./bin
              shell: bash

            - name: Publish window and linux binaries
              if: runner.os != 'macOS'
              run: npm run build
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: Publish mac binaries
              if: runner.os == 'macOS'
              run: npm run build
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                CSC_LINK: ${{ secrets.MAC_CERTIFICATE }}
                CSC_KEY_PASSWORD: ${{ secrets.MAC_CERTIFICATE_PASSWORD }}
                ELECTRON_WALLET_APPLE_ID: ${{ secrets.ELECTRON_WALLET_APPLE_ID }}
                ELECTRON_WALLET_PASSWORD: ${{ secrets.ELECTRON_WALLET_PASSWORD }}
                ELECTRON_WALLET_TEAM_ID: ${{ secrets.ELECTRON_WALLET_TEAM_ID }}

            - name: Remove un-needed artifacts
              run: rm -r -- ./*/
              shell: bash
              working-directory: ./dist/electron-mat/Packaged

            - name: Upload artifacts
              uses: actions/upload-artifact@v1
              with:
                name: ${{ runner.OS }}
                path: dist/electron-mat/Packaged
